// This is the public API offered by your entity.
syntax = "proto3";

import "google/protobuf/empty.proto";
import "akkaserverless/annotations.proto";
import "google/api/annotations.proto";

package actor.chat;

message AddMessage {
  string chat_id = 1 [(akkaserverless.field).entity_key = true];
  string message = 2;
}

message MessageView {
  string text = 1;
}

message ChatView {
  repeated MessageView items = 1;
}

message GetChat {
  string chat_id = 1 [(akkaserverless.field).entity_key = true];
}

message AddAdmin {
  string chat_id = 1 [(akkaserverless.field).entity_key = true];
  string user_id = 2;
  repeated string signedBy = 3;
}

message RemoveAdmin {
  string chat_id = 1 [(akkaserverless.field).entity_key = true];
  string user_id = 2;
  repeated string signedBy = 3;
}


message AddUser {
  string chat_id = 1 [(akkaserverless.field).entity_key = true];
  string user_id = 2;
  repeated string signedBy = 3;
}

message RemoveUser {
  string chat_id = 1 [(akkaserverless.field).entity_key = true];
  string user_id = 2;
  repeated string signedBy = 3;
}

message CreateChat {
  string chat_id = 1 [(akkaserverless.field).entity_key = true];
  string admin = 2;
}

service ChatService {
  option (akkaserverless.codegen) = {
    event_sourced_entity: {
      name: "actor.chat.Chat"
      entity_type: "chat"
      state: "actor.chat.domain.ChatState",
      events: [
        "actor.chat.domain.MessageAdded",
        "actor.chat.domain.AdminAdded",
        "actor.chat.domain.AdminRemoved",
        "actor.chat.domain.UserAdded",
        "actor.chat.domain.UserRemoved",
        "actor.chat.domain.CreatedChat"
      ]
    }
  };


  rpc createChat (CreateChat) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/chat/{chat_id}"
      body: "*"
    };
  }

  rpc addMessage (AddMessage) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/chat/{chat_id}/add"
      body: "*"
    };
  }

  rpc getChat (GetChat) returns (ChatView) {
    option (google.api.http) = {
      get: "/chat/{chat_id}"
    };
  }


  rpc addUser (AddUser) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/chat/{chat_id}/users"
      body: "*"
    };
  }

  rpc deleteUser (RemoveUser) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/chat/{chat_id}/users"
      body: "*"
    };
  }

  rpc addAdmin (AddAdmin) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/chat/{chat_id}/admins"
      body: "*"
    };
  }

  rpc deleteAdmin (RemoveAdmin) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/chat/{chat_id}/admins"
      body: "*"
    };
  }

}
